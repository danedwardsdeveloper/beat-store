# syntax = docker/dockerfile:1
ARG NODE_VERSION=22.2.0
FROM node:${NODE_VERSION}-slim AS base
LABEL fly_launch_runtime="Next.js"
WORKDIR /app

ENV NODE_ENV="production"
ENV ESLINT_NO_DEP_VERSION_CHECK=true

ENV DATABASE_URL=""
ENV JWT_SECRET=""
ENV MAILGUN_KEY=""
ENV STRIPE_WEBHOOK_SECRET=""
ENV STRIPE_SECRET_KEY=""
ENV STRIPE_SECRET_TEST_KEY=""
ENV MY_PERSONAL_EMAIL=""
ENV AWS_ACCESS_KEY_ID=""
ENV AWS_SECRET_ACCESS_KEY=""
ENV CF_URL=""
ENV CF_KEY_PAIR_ID=""
ENV CF_DOMAIN=""
ENV CF_PRIVATE_KEY="-----BEGIN PRIVATE KEY-----\n-----END PRIVATE KEY-----"

ARG PNPM_VERSION=9.12.0
RUN npm install -g pnpm@$PNPM_VERSION
FROM base AS build
RUN apt-get update -y && \
    apt-get install -y openssl build-essential
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile --prod=false
COPY prisma ./prisma
RUN npx prisma generate
COPY . .
RUN pnpm run build
RUN pnpm prune --prod
FROM base
COPY --from=build /app/node_modules/prisma /app/node_modules/prisma
COPY --from=build /app/node_modules/@prisma /app/node_modules/@prisma
COPY --from=build /app/.next/standalone /app
COPY --from=build /app/.next/static /app/.next/static
COPY --from=build /app/public ./public

EXPOSE 3000
CMD [ "node", "server.js" ]
